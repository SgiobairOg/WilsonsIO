---
import Base from '@layouts/Base.astro'
import { capitalise, useTranslations } from '@i18n/utils';
import { getCollection } from 'astro:content';
import BlogPostPreview from '@components/BlogPostPreview.astro';

export const prerender = false

const {lang: currentLang, tag} = Astro.params;
const t = useTranslations(currentLang);

if(!currentLang || !tag) throw new Error('[[tag].astro partial] currentLang and tag are required params')

const publishedBlogPosts = (await getCollection('blogPosts', ({data, id}) => {
  return !data.isDraft && id.startsWith(currentLang) && data.tags.includes(tag)
})).sort(
  (a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf()
)
---

<Base title={capitalise(tag)}>
  <main class="blog-content">
    <h1>{capitalise(tag)}</h1>
    <div class="blog-intro" set:html={t('tags.intro', {replacements:[{'tag': tag}]})} />

    {publishedBlogPosts.length > 0 
      ? publishedBlogPosts.map(post => (<BlogPostPreview post={post} />))
      : (<div class="no-posts" set:html={t('blog.noPosts')} />)
    }
  </main>
</Base>

<style lang="scss">
  @use '@styles/_variables' as *;
  @use '@styles/_mixins' as *;

  .blog-content {
    padding: 0 2rem;
    grid-row-start: content;
    grid-row-end: nav;
    grid-column-start: content;
    grid-column-end: nav;
    font-size: 1.4em;
  }

  .blog-intro {
    margin-bottom: 4rem;
  }

  :root[lang="jp"] .blog-intro {
    margin-right: 3rem;
  }

  @include media(">mobile") {
    :root[lang="jp"] .blog-intro {
      margin-right: 0;
      min-height: initial;
    }
  }

  h1 {
    font-size: 5rem;
    line-height: 6.5rem;
    margin-bottom: 1.5rem;
    margin-right: 3.5rem;
    max-width: 100%;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    font-family:  "Cherry Bomb One";
    color: hsl(var(--color-primary));
  }

  .no-posts {
    width: 80%;
    max-width: 36rem;
    padding: 2rem;
    margin: 7rem auto;
    border: 2px solid hsl(var(--color-primary));
    border-left-width: 6px;
  }
</style>