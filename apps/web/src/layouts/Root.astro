---
import { getUrlInfo } from '@i18n/utils'
import LanguagePicker from '@components/LanguagePicker.astro'
import ThemeToggle from '@components/ThemeToggle.astro'
import NavBar from '@components/NavBar.astro'
import type { templateHeadProps } from '@typings/template';

import '@styles/global.scss';

type Props = templateHeadProps;

const {lang: currentLang} = getUrlInfo(Astro.url);
const { title, canonicalUrl } = Astro.props
---
<!DOCTYPE html>
<html lang={currentLang}>
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<meta name="generator" content={Astro.generator} />
  <meta name="color-scheme" content="dark light">
  <link rel="apple-touch-icon" sizes="180x180" href=`/${currentLang}/apple-touch-icon.png` />
  <link rel="icon" type="image/png" sizes="32x32" href=`/${currentLang}/favicon-32x32.png` />
  <link rel="icon" type="image/png" sizes="16x16" href=`/${currentLang}/favicon-16x16.png` />
  <link rel="manifest" href=`/${currentLang}/site.webmanifest` />

  {canonicalUrl ? (<link rel="canonical" href={canonicalUrl} />) : null}

  <title>{title ? `${title} |Â Wilsons.io` : 'Wilsons.io'}</title>
</head>
<body class="layout">
  <div class="controls">
    <LanguagePicker />
    <ThemeToggle />
  </div>
  <NavBar />
  <slot />
  <footer></footer>
</body>
</html>

<style lang="scss">
  @use '@styles/_variables.scss' as *;
  @use '@styles/_mixins.scss' as *;

  .controls {
    display: flex;
    flex-flow: row nowrap;
    justify-content: flex-end;
    align-items: flex-start;
    padding: 1rem 0.5rem 0 0;
    grid-area: controls;
    width: 100vw;
    max-width: 100%;
  }

  .layout {
    width: 100vw;
    max-width: 100%;
    display: grid;
    grid-template-columns: 1fr minmax(max-content, 80px);
    grid-template-rows: 7rem max-content 1fr 10rem;
    grid-column-gap: 0px;
    grid-row-gap: 0px;
    grid-template-areas:
    "controls controls"
    "nav nav"
    "content content"
    "footer footer";
    z-index: 0;

  }

  :root[lang="jp"] .layout {
    grid-template-columns: 1fr minmax(max-content, 80px);
    grid-template-areas:
    "controls controls"
    "content nav"
    "content nav"
    "footer footer";
  }

  @include media(">mobile") {
    .layout {
      grid-template-columns: 80px 1fr;
      grid-template-areas:
      ". controls"
      ". nav"
      ". content"
      ". footer";
    }
    :root[lang="jp"] .layout {
      grid-template-columns: minmax(max-content, 80px) 1fr;
      grid-template-areas:
      "controls controls"
      "nav content"
      ". content"
      ". footer";
    }
  }
</style>